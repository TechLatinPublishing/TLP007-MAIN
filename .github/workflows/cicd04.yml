# This is a basic workflow to help you get started with Actions
# name:Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  
  AWS_REGION : us-east-1 #Change to reflect your Region

  #BUCKET_NAME : "<example-bucket-name>"
  BUCKET_NAME : "tlp.cs.007"
  # AWS_REGION : "<example-aws-region>"
# permission can be added at job level or workflow level



# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
#   AssumeRoleAndCallIdentity:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Git clone the repository
#         uses: actions/checkout@v3
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1.7.0
#         with:
#       #    role-to-assume: <arn:aws:iam::111122223333:role/GitHubAction-AssumeRoleWithAction> #change to reflect your IAM roleâ€™s ARN
#           role-to-assume: arn:aws:iam::086708244285:role/GitHubAction-AssumeRoleWithAction
#           role-session-name: GitHub_to_AWS_via_FederatedOIDC
#           aws-region: ${{ env.AWS_REGION }}
#       # Hello from AWS: WhoAmI
#       - name: Sts GetCallerIdentity
#         run: |
#           aws sts get-caller-identity


  S3PackageUpload:
    runs-on: ubuntu-latest

    env:
      HUGO_VERSION: 0.121.0
      HUGO_ENVIRONMENT: production


    steps:

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'


      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
        #  hugo-version: 'v0.121.1'
          hugo-version: 'latest'


# - this step not necessary but in documentation.
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Git clone the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0




      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::086708244285:role/GitHubAction-AssumeRoleWithAction
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}


      - name: Clean and Add Hugo Modules
        run: make rebuildSM

      - name: Hugo Module Commands
        run: |
          hugo mod get -u ./...
          hugo mod tidy


      - name: Install Node.js Dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo xx
        env:
 #         HUGO_ENVIRONMENT: ${{ env.HUGO_ENVIRONMENT }} 
 #         HUGO_ENV: ${{ env.HUGO_ENVIRONMENT }} 
          HUGO_ENVIRONMENT: development
          HUGO_ENV: development
          # HUGO_ENVIRONMENT: staging
          # HUGO_ENV: staging
          # HUGO_ENVIRONMENT: production
          # HUGO_ENV: production


        run: |
          hugo \
          --gc \
          --minify \
          --destination "public"
    #     --baseURL "${{ steps.pages.outputs.base_url }}/" \



      # Upload a file to AWS s3
      - name:  Copy HUGO SITE to s3 Bucket 
        run: |
          aws s3 cp "public" "s3://tlp.cs.007/" --recursive



#         aws s3 cp public/index.html s3://${{ env.BUCKET_NAME }}/
#          aws s3 cp "public" "s3://tlp.cs.007/" --recursive  //works
#          aws s3 cp "public/*" "s3://tlp.cs.007/" --recursive
#          aws s3 cp "./public/*" "s3://tlp.cs.007/" --recursive
#          aws s3 cp "public/*" "s3://tlp.cs.007/" --recursive
#          aws s3 cp public/* s3://${{ env.BUCKET_NAME }}/
#   aws s3 cp ./index.html s3://${{ env.BUCKET_NAME }}/
#   aws s3 cp ./README.md s3://${{ env.BUCKET_NAME }}/
#   aws s3 cp ./README.md s3://${{ env.BUCKET_NAME }}/
#   aws s3 cp public/index.html s3://${{ env.BUCKET_NAME }}/

